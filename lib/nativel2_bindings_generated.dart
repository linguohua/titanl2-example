// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for `'src/gol2/build/libgol2.h'`.
///
/// Regenerate bindings with `flutter pub run ffigen --config ffigen.yaml`.
///
class Nativel2Bindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Nativel2Bindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Nativel2Bindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void FreeCString(
    ffi.Pointer<ffi.Char> jsonStrPtr,
  ) {
    return _FreeCString(
      jsonStrPtr,
    );
  }

  late final _FreeCStringPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'FreeCString');
  late final _FreeCString =
      _FreeCStringPtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> JSONCall(
    ffi.Pointer<ffi.Char> jsonStrPtr,
  ) {
    return _JSONCall(
      jsonStrPtr,
    );
  }

  late final _JSONCallPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>>('JSONCall');
  late final _JSONCall = _JSONCallPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();
}
